name: CI/CD Pipeline for Derivatives Pricer

on:
  push:
    branches: [ main ]

# Environment variables available to all jobs and steps in the workflow.
env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY_JAVA: java-app
  ECR_REPOSITORY_PYTHON: python-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Java app image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_JAVA:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY_JAVA:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_JAVA --all-tags

      - name: Build, tag, and push Python app image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PYTHON:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY_PYTHON:latest -f volatility-service/Dockerfile ./volatility-service
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_PYTHON --all-tags